<?php

use Application\Entity\Db\Parametre;
use Application\Provider\Misc\Icone;
use Application\Provider\Privilege\ParametrePrivileges;
use Application\View\Helper\Parametres\ParametreViewHelper;

/**
 * @see ParametreViewHelper::renderListe() *
 * @var Parametre[] $parametres
 *
 */
//TODO : remplacer le nom par un code et rajouter un libellé
$tableId = "liste-parametres";
$vh = $this->parametre();
$canEdit = $vh->hasPrivilege(ParametrePrivileges::PARAMETRE_MODIFIER);
?>

<div class="row">
    <div class="col-md-12">
        <table id="<?= $tableId ?>" class="table table-hover table-condensed">
            <thead>
            <tr>
                <th class="no-search hidden" data-type="num">Ordre</th>
                <th class="hidden no-sort" data-type="num">Catégorie</th>
                <th class="col-md-3 no-sort">Libellé</th>
                <th class="col-md-5 no-sort"> Description</th>
                <th class="col-md-2 no-sort"> Valeur</th>
                <?php if($canEdit) :?>
                <th class="col-md-2 no-sort no-search text-end" data-priority="0"> Actions</th>
                <?php endif;?>
            </tr>
            </thead>
            <tbody>
            <?php
            /** @var Parametre $parametre */
            foreach ($parametres as $parametre) :
                $vh->setParametre($parametre);
                ?>
                <tr>
                    <td class="hidden"
                        data-order="<?= $parametre->getParametreCategorie()->getOrdre() * 1000 + $parametre->getOrdre() ?>"></td>
                    <td class="hidden"><?= $parametre->getParametreCategorie()->getLibelle() ?></td>
                    <td><?= $parametre->getLibelle() ?></td>
                    <td><?= $parametre->getDescription() ?></td>
                    <td class=""><?= $parametre->getValue() ?></td>
                    <?php if($canEdit) :?>
                    <td class="text-end">
                        <?= $vh->lienModifier(Icone::render(Icone::MODIFIER), ['class' => 'text-primary ajax-modal']) ?>
                    </td>
                    <?php endif; ?>
                </tr>
            <?php endforeach; ?>
            <tbody>
        </table>
    </div>
</div>

<script type="text/javascript">
    $(function () {
        let collapsedGroups = {};
        let options = generateDataTableSetings({
                order: [[0, 'asc']],
                paging: false,
                "lengthMenu": null,
                dom : "<'row' <'col-sm-12 col-md-12 ' f>>" +
                    "<'row' <'col-sm-12 col-md-12' t> >" +
                    "<'row' <'col-sm-12 col-md-12'i>>",
                rowGroup: {
                    dataSrc: [1],
                    startRender: function (rows, group) {
                        let collapsed = !!collapsedGroups[group];

                        rows.nodes().each(function (r) {
                            r.style.display = collapsed ? 'none' : '';
                        });
                        // Add category name to the <tr>. NOTE: Hardcoded colspan

                        let tr = $('<tr/>')
                            .append('<td colspan="5" class="bg-muted"><strong>' + group + '</strong>' + ' (' + rows.count() + ') <span class="toogle-icon fas mx-1"><span> </td>')
                            .attr('data-name', group)
                            .toggleClass('collapsed', collapsed);
                        $(tr).find('.toogle-icon').toggleClass((collapsed) ? 'fa-caret-square-up' : 'fa-caret-square-down');
                        return tr
                    }
                },
                stateSave: true,
                retrieve: true,
            }
        )
        let tableInstance = $("#<?= $tableId ?>").DataTable(options);
        $('#<?= $tableId ?> tbody').on('click', 'tr.dtrg-start', function () {
            let name = $(this).data('name');
            collapsedGroups[name] = !collapsedGroups[name];
            tableInstance.draw(false);
        });
    });
</script>