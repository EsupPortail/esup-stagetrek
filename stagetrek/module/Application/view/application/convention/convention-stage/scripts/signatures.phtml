<?php

/**
 * @see ConventionStageService::generateConvention()
 * @var \Application\Entity\Db\ConventionStage $convention
 */

use Application\Entity\Db\ConventionStageSignataire;

/**
 * @var ConventionStageSignataire[] $signataires
 */
$signataires = $convention->getConventionStageSignataires()->toArray();

if(empty($signataires)) return;
usort($signataires, function (ConventionStageSignataire $s1, ConventionStageSignataire $s2) {
    return $s1->getOrdre() - $s2->getOrdre();
});
?>
<div>
    <?php
    for($i=0; $i<sizeof($signataires); $i++):
    ?>
    <table width="100%">
        <tr>
            <?php for($j=0; $j<=1; $j++) :
            $s = (key_exists($i+$j, $signataires))? $signataires[$i+$j] : null;
            if($s===null){
                echo '<td width="50%">';
                continue;
            }
            ?>
            <td width="50%" style="border-top: 1px solid black;">
                <table width="100%">
                    <tr>
                        <td style="text-align: center; vertical-align: top">
                            <?= $s->getLibelle() ?>
                        </td>
                    </tr>
                    <tr>
                        <td height="150px"></td>
                    </tr>
                    <tr>
                        <td style="text-align: center; vertical-align: bottom">
                            <?=  $s->getDisplayName() ?>
                        </td>
                    </tr>
                </table>
            </td>
            <?php endfor; ?>
        </tr>
    </table>
    <?php  $i++; endfor; ?>
</div>
