FROM debian:bookworm-20240311

RUN if [ -f ./deploy_configuration/proxy/.env_proxy ]; then \
    # Si le fichier source existe, copiez-le
    COPY ./deploy_configuration/proxy/.env_proxy /; \
fi
COPY ./deploy_configuration/proxy/proxy.sh /
RUN chmod +x /proxy.sh

RUN sh /proxy.sh

ARG HTTP_PROXY
ENV http_proxy=$HTTP_PROXY
ENV https_proxy=$HTTP_PROXY
ENV HTTP_PROXY=$HTTP_PROXY
ENV HTTPS_PROXY=$HTTP_PROXY


# Vérifiez si la variable d'environnement http_proxy est définie
RUN if [ -n "$http_proxy" ]; then \
    # Si elle est définie, exécutez les commandes pour configurer le proxy
    touch /etc/apt/apt.conf.d/05proxy; \
    echo 'Acquire::HTTP::Proxy "'$http_proxy'";' >> /etc/apt/apt.conf.d/05proxy; \
    echo 'Acquire::HTTPS::Prox "'$http_proxy'";' >> /etc/apt/apt.conf.d/05proxy; \
    echo 'Acquire::ftp::Proxy "'$http_proxy'";' >> /etc/apt/apt.conf.d/05proxy; \
    echo "Proxy configuré dans le système de packages avec la valeur $http_proxy" && true; \
fi


RUN mkdir /timemachine
RUN chmod 755 /timemachine

RUN apt-get update && apt-get install -y cron postgresql-client

RUN apt-get install -y python3-full python3-pip
RUN apt-get install -y python3-boto3
RUN apt-get install -y jq

COPY ./deploy_configuration/time-machine/upload-dump-database-s3.py /
RUN chmod u+x /upload-dump-database-s3.py

ADD ./deploy_configuration/time-machine/timemachine.sh /

RUN chmod +x /timemachine.sh


RUN apt-get update
RUN apt-get install -y curl
RUN curl https://dl.min.io/client/mc/release/linux-arm64/mc \
  --create-dirs \
  -o ~/minio-binaries/mc
RUN apt-get install -y s3cmd


#Clean the Proxy env
ENV HTTP_PROXY ""
ENV HTTPS_PROXY ""
ENV http_proxy ""
ENV https_proxy ""
RUN rm -f /etc/apt/apt.conf.d/05proxy

CMD ["cron", "-f"]
