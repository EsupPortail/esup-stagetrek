FROM ubuntu:20.04
#TODO : passer sur une image alpine plus légere (mais requiere de remplacer les apt-get par apk

# Set timezone
ENV TZ=Europe/Paris
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN if [ -f ./deploy_configuration/proxy/.env_proxy ]; then \
    COPY ./deploy_configuration/proxy/.env_proxy /; \
fi
COPY ./deploy_configuration/proxy/proxy.sh /
RUN chmod +x /proxy.sh

RUN sh /proxy.sh

ARG HTTP_PROXY
ENV http_proxy=$HTTP_PROXY
ENV https_proxy=$HTTP_PROXY
ENV HTTP_PROXY=$HTTP_PROXY
ENV HTTPS_PROXY=$HTTP_PROXY

# Vérifiez si la variable d'environnement http_proxy est définie
RUN if [ -n "$http_proxy" ]; then \
    # Si elle est définie, exécutez les commandes pour configurer le proxy
    touch /etc/apt/apt.conf.d/05proxy; \
    echo 'Acquire::HTTP::Proxy "'$http_proxy'";' >> /etc/apt/apt.conf.d/05proxy; \
    echo 'Acquire::HTTPS::Prox "'$http_proxy'";' >> /etc/apt/apt.conf.d/05proxy; \
    echo 'Acquire::ftp::Proxy "'$http_proxy'";' >> /etc/apt/apt.conf.d/05proxy; \
    echo "Proxy configuré dans le système de packages avec la valeur $http_proxy" && true; \
fi

RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    apache2 apache2-bin libapache2-mod-fcgid

COPY ./deploy_configuration/shibconf/shibboleth/packages.sh /
RUN chmod u+x /packages.sh
RUN apt-get install -y expect
RUN sh /packages.sh

RUN apt-get install -y apache2
RUN apt-get install -y libapache2-mod-shib2
RUN apt-get install -y supervisor
RUN apt-get install -y nano

#
#COPY ./deploy_configuration/apache/template-000-default.conf /
#COPY ./deploy_configuration/apache/template-default-ssl.conf /

### Configuration d'un certificat ssl auto--généré
RUN set -eux; \
    apt-get update; \
    apt-get install -y ssl-cert; \
    a2enmod ssl; \
    a2ensite default-ssl

COPY ./deploy_configuration/apache/replace_env.sh /

### Configuration WayF
RUN apt-get install -y imagemagick
RUN apt-get install -y python3 python3-pip
RUN pip3 install lxml
RUN apt-get install -y libxml2-utils
RUN apt-get install -y unzip
RUN apt-get install -y wget

#RUN apt-get install -y php8.2-{fpm,common,xml,mbstring} libapache2-mod-php
RUN apt-get install -y php7.4-fpm php7.4-common php7.4-xml php7.4-mbstring libapache2-mod-php
RUN a2enmod proxy_fcgi setenvif

WORKDIR /

RUN mkdir -p /var/cache/shibboleth

COPY ./deploy_configuration/shibconf/files_conf/security.conf /etc/apache2/conf-available
COPY ./deploy_configuration/shibconf/files_conf/shib.conf /etc/apache2/conf-available
COPY ./deploy_configuration/shibconf/files_conf/wayf.conf /etc/apache2/conf-available
COPY ./deploy_configuration/shibconf/files_conf/ports.conf /etc/apache2
COPY ./deploy_configuration/apache/stagetrek.conf /etc/apache2/conf-available/

RUN a2enmod shib
RUN a2enmod rewrite actions proxy proxy_fcgi setenvif
RUN a2enconf security
RUN a2enconf stagetrek.conf
RUN a2enconf wayf

COPY ./deploy_configuration/shibconf/switchwayf /var/www/html/switchwayf
RUN chmod -R go=u-w /var/www/html/switchwayf

COPY ./deploy_configuration/shibconf/shibboleth/supervisord.conf /

RUN apt-get install -y cron
RUN apt-get install -y supervisor
RUN apt-get install -y gettext-base

RUN a2ensite 000-default
RUN a2ensite default-ssl

RUN mkdir /var/www/html/stagetrek
WORKDIR /var/www/html/stagetrek/
COPY ./stagetrek /var/www/html/stagetrek/
WORKDIR /var/www/html/stagetrek/public

#Clean the Proxy env
ENV HTTP_PROXY ""
ENV HTTPS_PROXY ""
ENV http_proxy ""
ENV https_proxy ""
RUN rm -f /etc/apt/apt.conf.d/05proxy

EXPOSE 80
EXPOSE 443